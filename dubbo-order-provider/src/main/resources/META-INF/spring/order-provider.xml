<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签-->
    <dubbo:application name="order-provider"></dubbo:application>

    <!--添加监控-->
    <dubbo:monitor protocol="registry"></dubbo:monitor>

    <!--dubbo这个服务所要暴露的服务地址所对应的注册中心 集群写法：zookeeper://192.168.40.155:2181?backup=192.168.40.156:2181,192.168.40.157:2181-->
    <dubbo:registry address="zookeeper://192.168.40.155:2181" file="d:/dubbo.cache"></dubbo:registry>

    <!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http-->
    <dubbo:protocol name="dubbo" port="20880"></dubbo:protocol>

    <dubbo:module name="order-module"></dubbo:module>

    <!--<dubbo:provider timeout="2000"></dubbo:provider>-->

    <!--服务发布配置，需要暴露的服务接口 版本1.0.0 可以多版本支持 使用version控制，
    一般版本使用两位，偶数版本是稳定版，奇数是非稳定版，第三位用于只需要服务端修改的版本升级：不需要消费者修改，一些内部逻辑调整
    loadbalance：负载均衡 默认是随机（random）  roundrobin（轮询） lastactive(最少活跃调用数,就是慢的提供者收到更少的请求)  ConsistentHash（一致性Hash，相同参数的请求总是发到同一提供者）
    weight：服务权重（配合loadbalance 中的random/roundrobin 使用，可以在管理后台设置）
    -->
    <dubbo:service interface="com.maochong.xiaojun.orderapi.IOrderServices" ref="orderService" protocol="dubbo" timeout="5000"  version="1.0.0" loadbalance="random" weight="100">
        <!--可以设置方法的timeout，上面的类也可以设置timeout，如果两个都设置以方法的为准，如果消费端也设置已消费端为准-->
        <dubbo:method name="doOrder" timeout="5000"></dubbo:method>
    </dubbo:service>

    <!--服务发布配置，需要暴露的服务接口 版本2.0.0-->
    <dubbo:service interface="com.maochong.xiaojun.orderapi.IOrderServices" ref="orderQueryService" protocol="dubbo" timeout="5000"  version="2.0.0">
        <!--可以设置方法的timeout，上面的类也可以设置timeout，如果两个都设置以方法的为准，如果消费端也设置已消费端为准-->
        <dubbo:method name="doOrder" timeout="5000"></dubbo:method>
    </dubbo:service>
    <!--服务发布配置，需要暴露的服务接口 版本2.2.0 用于服务消费者异步调用测试-->
    <dubbo:service interface="com.maochong.xiaojun.orderapi.IOrderServices" ref="orderAsyncService" protocol="dubbo" timeout="5000"  version="2.2.0"/>

    <bean name="orderService" class="com.maochong.xiaojun.service.OrderServiceImpl"></bean>

    <bean name="orderQueryService" class="com.maochong.xiaojun.service.OrderQueryServiceImpl"></bean>

    <bean name="orderAsyncService" class="com.maochong.xiaojun.service.OrderAsyncServiceImpl"></bean>
</beans>